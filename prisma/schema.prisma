// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Message {
  id   Int      @id @default(autoincrement())
  time DateTime @default(now())

  target String // channel, or origin nick in pm
  nick   String
  text   String
  type   String // message | action

  checked Boolean @default(false)
  allowed Boolean @default(false)

  user   String?
  host   String?
  server String
}

// JSON record store for arbitrary module data, ie. options/settings
model OptionData {
  key   String @id
  value String
}

model ChatHistory {
  id Int @id @default(autoincrement())

  server String @default("missing") // TODO remove after migrate
  target String

  role    String
  name    String?
  content String
}

// Route: handling function/component group msg is sent to
// Profile: Data used by the route, ie. prompt with history

// match channel to route/profile
model Routes {
  server          String // * = any
  target          String // ## any channel, ?? any query (ie. pm)
  matcher         String // regexp to trigger
  route           String // function name/id
  systemProfile   SystemProfile? @relation(fields: [systemProfileID], references: [id])
  systemProfileID Int?

  @@id([server, target, matcher, route])
}

// used by route to set system prompt etc
model SystemProfile {
  id           Int      @id @default(autoincrement()) // eventually for history
  prompt       String // support functions in the future
  memoryLength Int
  maxTokens    Int
  Routes       Routes[]
}
