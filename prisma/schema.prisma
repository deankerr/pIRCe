generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Messages (IRC events, could be things like join/quit etc)
model Message {
  id Int @id @default(autoincrement())

  target String // channel, or origin user if direct message
  nick   String

  type    String // irc command, e.g. 'message' 'action'
  content String // msg text value, but could be whatever if other cmds added

  self Boolean // we did this

  time   DateTime @default(now())
  mask   String // just user@host
  server String

  tag Tag[]
}

// Describes the conditions under which a message is sent to a handler/profile
model Route {
  id Int @id @default(autoincrement())

  server String // * = any or irc.server.org
  target String // # = any channel, ? = any query (ie. pm), * = any target

  startsWith String? // triggers
  contains   String?

  handler String // name of actual function message is sent to TYPE

  redirectOutput String? // output to this target instead

  // the ai profile data to send to handler along with message
  profile   Profile? @relation(fields: [profileID], references: [id])
  profileID String?
}

// Prompt set up, options and values
model Profile {
  id         String  @id // 'bart', 'eee'
  prompt     String // in "promptScript"
  promptTail String?

  // OAI options
  maxTokens   Int
  temperature Float    @default(0.9)
  choices     Int      @default(1) // TODO rename?
  stop        String[] // ? can this just be empty

  // our opts
  maxHistorySize       Int
  numIncludeContextual Int     @default(0)
  replaceNick          String?

  route Route[]
}

model Tag {
  id        Int     @id @default(autoincrement())
  message   Message @relation(fields: [messageID], references: [id])
  messageID Int

  key   String
  value String?

  @@unique([messageID, key])
}

// Options
model Options {
  options            String  @id @default("options")
  adminKeyword       String  @default("!!admin!!")
  requireModeration  Boolean
  allowModCategories String  @default("") // comma delimetered

  outputFileURLTemplate String @default("") // eg "web.site/%.txt"
  outputFileDir         String @default("output")
  outputIRCMaxNewlines  Int    @default(4)
  outputIRCMaxChars     Int    @default(440)
}

// output filter
model WordList {
  word String @id // the word/phrase
}
